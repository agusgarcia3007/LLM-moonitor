/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as LandingRouteRouteImport } from './routes/_landing/route'
import { Route as DashboardRouteRouteImport } from './routes/_dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LandingAboutRouteImport } from './routes/_landing/about'
import { Route as DashboardUsersRouteImport } from './routes/_dashboard/users'
import { Route as DashboardProjectsRouteImport } from './routes/_dashboard/projects'
import { Route as DashboardLogsRouteImport } from './routes/_dashboard/logs'
import { Route as DashboardExperimentsRouteImport } from './routes/_dashboard/experiments'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardCostAnalysisRouteImport } from './routes/_dashboard/cost-analysis'
import { Route as DashboardApiKeysRouteImport } from './routes/_dashboard/api-keys'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthResetPasswordRouteImport } from './routes/_auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as AuthAcceptInvitationRouteImport } from './routes/_auth/accept-invitation'
import { Route as DashboardProjectsIndexRouteImport } from './routes/_dashboard/projects/index'
import { Route as DashboardProjectsIdRouteImport } from './routes/_dashboard/projects/$id'

const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRouteRoute = LandingRouteRouteImport.update({
  id: '/_landing',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingAboutRoute = LandingAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LandingRouteRoute,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProjectsRoute = DashboardProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardLogsRoute = DashboardLogsRouteImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardExperimentsRoute = DashboardExperimentsRouteImport.update({
  id: '/experiments',
  path: '/experiments',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCostAnalysisRoute = DashboardCostAnalysisRouteImport.update({
  id: '/cost-analysis',
  path: '/cost-analysis',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardApiKeysRoute = DashboardApiKeysRouteImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAcceptInvitationRoute = AuthAcceptInvitationRouteImport.update({
  id: '/accept-invitation',
  path: '/accept-invitation',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardProjectsIndexRoute = DashboardProjectsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardProjectsRoute,
} as any)
const DashboardProjectsIdRoute = DashboardProjectsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => DashboardProjectsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pricing': typeof PricingRoute
  '/accept-invitation': typeof AuthAcceptInvitationRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/api-keys': typeof DashboardApiKeysRoute
  '/cost-analysis': typeof DashboardCostAnalysisRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/experiments': typeof DashboardExperimentsRoute
  '/logs': typeof DashboardLogsRoute
  '/projects': typeof DashboardProjectsRouteWithChildren
  '/users': typeof DashboardUsersRoute
  '/about': typeof LandingAboutRoute
  '/projects/$id': typeof DashboardProjectsIdRoute
  '/projects/': typeof DashboardProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pricing': typeof PricingRoute
  '/accept-invitation': typeof AuthAcceptInvitationRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/api-keys': typeof DashboardApiKeysRoute
  '/cost-analysis': typeof DashboardCostAnalysisRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/experiments': typeof DashboardExperimentsRoute
  '/logs': typeof DashboardLogsRoute
  '/users': typeof DashboardUsersRoute
  '/about': typeof LandingAboutRoute
  '/projects/$id': typeof DashboardProjectsIdRoute
  '/projects': typeof DashboardProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/_landing': typeof LandingRouteRouteWithChildren
  '/pricing': typeof PricingRoute
  '/_auth/accept-invitation': typeof AuthAcceptInvitationRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_dashboard/api-keys': typeof DashboardApiKeysRoute
  '/_dashboard/cost-analysis': typeof DashboardCostAnalysisRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/experiments': typeof DashboardExperimentsRoute
  '/_dashboard/logs': typeof DashboardLogsRoute
  '/_dashboard/projects': typeof DashboardProjectsRouteWithChildren
  '/_dashboard/users': typeof DashboardUsersRoute
  '/_landing/about': typeof LandingAboutRoute
  '/_dashboard/projects/$id': typeof DashboardProjectsIdRoute
  '/_dashboard/projects/': typeof DashboardProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/pricing'
    | '/accept-invitation'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/api-keys'
    | '/cost-analysis'
    | '/dashboard'
    | '/experiments'
    | '/logs'
    | '/projects'
    | '/users'
    | '/about'
    | '/projects/$id'
    | '/projects/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/pricing'
    | '/accept-invitation'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/api-keys'
    | '/cost-analysis'
    | '/dashboard'
    | '/experiments'
    | '/logs'
    | '/users'
    | '/about'
    | '/projects/$id'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_dashboard'
    | '/_landing'
    | '/pricing'
    | '/_auth/accept-invitation'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/reset-password'
    | '/_auth/signup'
    | '/_dashboard/api-keys'
    | '/_dashboard/cost-analysis'
    | '/_dashboard/dashboard'
    | '/_dashboard/experiments'
    | '/_dashboard/logs'
    | '/_dashboard/projects'
    | '/_dashboard/users'
    | '/_landing/about'
    | '/_dashboard/projects/$id'
    | '/_dashboard/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LandingRouteRoute: typeof LandingRouteRouteWithChildren
  PricingRoute: typeof PricingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_landing/about': {
      id: '/_landing/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LandingAboutRouteImport
      parentRoute: typeof LandingRouteRoute
    }
    '/_dashboard/users': {
      id: '/_dashboard/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/projects': {
      id: '/_dashboard/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof DashboardProjectsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/logs': {
      id: '/_dashboard/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof DashboardLogsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/experiments': {
      id: '/_dashboard/experiments'
      path: '/experiments'
      fullPath: '/experiments'
      preLoaderRoute: typeof DashboardExperimentsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/cost-analysis': {
      id: '/_dashboard/cost-analysis'
      path: '/cost-analysis'
      fullPath: '/cost-analysis'
      preLoaderRoute: typeof DashboardCostAnalysisRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/api-keys': {
      id: '/_dashboard/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof DashboardApiKeysRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/accept-invitation': {
      id: '/_auth/accept-invitation'
      path: '/accept-invitation'
      fullPath: '/accept-invitation'
      preLoaderRoute: typeof AuthAcceptInvitationRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_dashboard/projects/': {
      id: '/_dashboard/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof DashboardProjectsIndexRouteImport
      parentRoute: typeof DashboardProjectsRoute
    }
    '/_dashboard/projects/$id': {
      id: '/_dashboard/projects/$id'
      path: '/$id'
      fullPath: '/projects/$id'
      preLoaderRoute: typeof DashboardProjectsIdRouteImport
      parentRoute: typeof DashboardProjectsRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthAcceptInvitationRoute: typeof AuthAcceptInvitationRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAcceptInvitationRoute: AuthAcceptInvitationRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardProjectsRouteChildren {
  DashboardProjectsIdRoute: typeof DashboardProjectsIdRoute
  DashboardProjectsIndexRoute: typeof DashboardProjectsIndexRoute
}

const DashboardProjectsRouteChildren: DashboardProjectsRouteChildren = {
  DashboardProjectsIdRoute: DashboardProjectsIdRoute,
  DashboardProjectsIndexRoute: DashboardProjectsIndexRoute,
}

const DashboardProjectsRouteWithChildren =
  DashboardProjectsRoute._addFileChildren(DashboardProjectsRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardApiKeysRoute: typeof DashboardApiKeysRoute
  DashboardCostAnalysisRoute: typeof DashboardCostAnalysisRoute
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardExperimentsRoute: typeof DashboardExperimentsRoute
  DashboardLogsRoute: typeof DashboardLogsRoute
  DashboardProjectsRoute: typeof DashboardProjectsRouteWithChildren
  DashboardUsersRoute: typeof DashboardUsersRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardApiKeysRoute: DashboardApiKeysRoute,
  DashboardCostAnalysisRoute: DashboardCostAnalysisRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardExperimentsRoute: DashboardExperimentsRoute,
  DashboardLogsRoute: DashboardLogsRoute,
  DashboardProjectsRoute: DashboardProjectsRouteWithChildren,
  DashboardUsersRoute: DashboardUsersRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface LandingRouteRouteChildren {
  LandingAboutRoute: typeof LandingAboutRoute
}

const LandingRouteRouteChildren: LandingRouteRouteChildren = {
  LandingAboutRoute: LandingAboutRoute,
}

const LandingRouteRouteWithChildren = LandingRouteRoute._addFileChildren(
  LandingRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LandingRouteRoute: LandingRouteRouteWithChildren,
  PricingRoute: PricingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
